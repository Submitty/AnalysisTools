#!/usr/bin/env python3

"""
Summarize statistics for anonymization.
"""

import sys
import argparse
import json
import re

from collections import defaultdict

ARGPARSER = argparse.ArgumentParser(\
        description="Summarize statistics for anonymization.")
ARGPARSER.add_argument("-c", "--config", type=int)
ARGPARSER.add_argument("-p", "--plot", action="store_const", const=True)
ARGS = ARGPARSER.parse_args()

with open(ARGS.config if ARGS.config else "config/anonymization.json")\
        as f:
    CONFIG = json.load(f)

DIRECTORY_NAMES = defaultdict(lambda: 0)
FILE_NAMES = defaultdict(lambda: defaultdict(lambda: 0))
INTERNAL_NAMES = defaultdict(lambda: defaultdict(lambda: 0))

def print_csv():
    """
    Output anonymization statistics in CSV format.
    """
    print("=== REPLACEMENTS IN DIRECTORIES ===")
    for key in DIRECTORY_NAMES.keys():
        print(key + "," + str(DIRECTORY_NAMES[key]))

    print("=== REPLACEMENTS IN FILENAMES ===")
    for key in FILE_NAMES.keys():
        print(key + "," + FILE_NAMES[key]["new"] + "," +
              str(FILE_NAMES[key]["count"]))

    print("=== REPLACEMENTS IN FILES ===")
    for key in INTERNAL_NAMES.keys():
        print(key + "," + INTERNAL_NAMES[key]["new"] + "," +
              str(INTERNAL_NAMES[key]["count"]))

def print_gnuplot():
    """
    Output anonymization statistics in a GNUPlot-readable format.
    """
    for i, key in enumerate(INTERNAL_NAMES.keys()):
        print(i, key, INTERNAL_NAMES[key]["count"])

for line in sys.stdin:
    match = re.search(r"Replaced (\w+) with (\w+)", line)
    if match:
        INTERNAL_NAMES[match.group(1)]["new"] = match.group(2)
        INTERNAL_NAMES[match.group(1)]["count"] += 1
        continue
    match = re.search(r"Applied substitution in path ([\w|/]+)", line)
    if match:
        DIRECTORY_NAMES[match.group(1)] += 1
        continue
    match = re.search(r"Applied substitution in filename: (\w+) for (\w+)",
                      line)
    if match:
        FILE_NAMES[match.group(2)]["new"] = match.group(1)
        FILE_NAMES[match.group(2)]["count"] += 1
        continue

if ARGS.plot:
    print_gnuplot()
else:
    print_csv()
